#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

preprocess do
  require 'set'
  tags = Set.new
  @items.select{|i| i[:tags] }.each do |item|
    item[:tags].each { |t| tags.add(t) }
  end
  tags.each do |tag|
  items << Nanoc::Item.new(
    "",
    { :tag => tag },
    "/tags/#{tag}/")
  end
end

compile '/css/*' do
  # don’t filter or layout
end

compile '/js/*' do
  # don’t filter or layout
end

compile 'htaccess' do
 #
end

compile 'atom' do
  filter :erb
end

compile '/tags/*/' do
  layout 'tag'
  layout 'default'
end

# compile '/readings/*' do
#   filter :kramdown
# end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else if item[:author]
         filter :kramdown
         snapshot :guts
         layout 'post'
       end
    filter :erb
    layout 'default'
  end
end

route '/css/*' do
  item.identifier.chop + '.css'
end

route '/js/*' do
  item.identifier.chop + '.js'
end

route 'atom' do
  item.identifier.chop + '.xml'
end

route 'htaccess' do
  '/.htaccess'
end


route '/readings/*' do
  item.identifier.gsub('/readings', '') + 'index.html'
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
